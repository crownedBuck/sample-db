-- PART 1

-- 1.
-- CREATE TABLE person (
-- 	person_id SERIAL PRIMARY KEY,
-- 	name VARCHAR(30),
-- 	age INT,
-- 	height INT,
-- 	city VARCHAR(30),
-- 	favorite_color VARCHAR(30)
-- )

-- 2.
-- INSERT INTO person (name, age, height, city, favorite_color)
-- VALUES
-- ('Bob', 70, 182, 'Madison', null),
-- ('Laura', 36, 150, 'Lodi', 'Greens and blues'),
-- ('Neecee', 56, 139, 'Mauston', 'Pink'),
-- ('Donald', 32, 182, 'Minniapolois', 'Red'),
-- ('Levi', 92, 155, 'Cashton', 'blue');

-- 3.
-- SELECT * FROM person
-- ORDER BY height DESC;

-- 4.
-- SELECT * FROM person
-- ORDER BY height ASC;

-- 5.
-- SELECT * FROM person
-- ORDER BY age DESC;

-- 6.
-- SELECT * FROM person
-- WHERE age > 20;

-- 7.
-- SELECT * FROM person
-- WHERE age = 18;

-- 8.
-- SELECT * FROM person
-- WHERE age < 20 OR age > 30; --unsure if it ment that they technically wanted both included OR like below

-- SELECT * FROM person --bc this will return nothing b/c no number is both less then 20 & greater than 30
-- WHERE age < 20 AND age > 30;

-- 9.
-- SELECT * FROM person
-- WHERE age <> 27;

-- 10.
-- SELECT * FROM person
-- WHERE favorite_color <> 'Red'; --does not return null, why?

-- 11. 
-- SELECT * FROM person
-- WHERE LOWER(favorite_color) <> 'red' AND LOWER(favorite_color) <> 'blue';

-- 12.
-- SELECT * FROM person
-- WHERE LOWER(favorite_color) = 'green' OR LOWER(favorite_color) = 'orange';

-- 13. 
-- SELECT * FROM person
-- WHERE LOWER(favorite_color) IN ('orange', 'green', 'blue')

-- 14.
-- SELECT * FROM person
-- WHERE LOWER(favorite_color) IN ('yellow', 'purple');

-- PART 2

-- 1

-- CREATE TABLE orders (
-- 	order_id SERIAL PRIMARY KEY,
-- 	person_id INT,
-- 	product_name VARCHAR(30),
-- 	product_price FLOAT,
-- 	quantity INT
-- )

-- 2.
-- INSERT INTO orders (person_id, product_name, product_price, quantity) 
-- VALUES 
-- (2, 'Bubbily soda', 5.99, 8),
-- (2, 'Lavander lotion', 20.87, 2),
-- (4, 'Puppy chow', 3.45, 20),
-- (1, 'Puppy chow', 3.45, 1),
-- (4, 'Bubbily soda', 8.99, 2);

-- 3.

-- SELECT * FROM orders;

-- 4.

-- SELECT SUM(quantity) FROM orders;

-- 5.

-- SELECT SUM(product_price * quantity) FROM orders;

-- 6.

-- SELECT SUM(product_price * quantity) FROM orders
-- GROUP BY person_id; 

-- PART 3

-- 1.

-- INSERT INTO artist (name)
-- VALUES
-- ('Nightwish'),
-- ('Epica'),
-- ('Within Temptation');

-- 2.
-- SELECT * FROM artist
-- ORDER BY name DESC
-- LIMIT 10;

-- 3.
-- SELECT * FROM artist
-- ORDER BY name ASC
-- LIMIT 5;

-- 4.
-- SELECT * FROM artist
-- WHERE name LIKE 'Black%';

-- 5.
-- SELECT * FROM artist
-- WHERE name LIKE '%Black%';

-- PART 4

-- 1.
-- SELECT * FROM employee
-- WHERE city LIKE 'Calgary';

-- 2.

-- SELECT * FROM employee
-- ORDER BY birth_date DESC
-- LIMIT 1;

-- 3.

-- SELECT * FROM employee
-- ORDER BY birth_date ASC
-- LIMIT 1;

-- 4.

-- SELECT * FROM employee
-- WHERE reports_to = 2;

-- 5.

-- SELECT city, COUNT(*) FROM employee
-- WHERE city LIKE 'Lethbridge'
-- GROUP BY city;

-- PART 5

-- 1. 
-- SELECT * FROM invoice
-- WHERE billing_country LIKE 'USA';

-- 2.
-- SELECT MAX(total) FROM invoice;

-- 3.
-- SELECT MIN(total) FROM invoice;

-- 4.
-- SELECT * FROM invoice
-- WHERE total > 5;

-- 5.
-- SELECT COUNT(total) FROM invoice
-- WHERE total < 5;

-- 6.
-- SELECT COUNT(total) FROM invoice
-- WHERE billing_state IN ('CA', 'TX', 'AZ')
-- GROUP BY billing_state;

-- 7.
-- SELECT AVG(total) FROM invoice;

-- 8.
-- SELECT SUM(total) FROM invoice;

-- 9. 

-- UPDATE invoice
-- SET total = 24
-- WHERE invoice_id = 5;

-- 10.

-- DELETE FROM invoice_line
-- WHERE invoice_id = 1;

-- DELETE FROM invoice
-- WHERE invoice_id = 1;
